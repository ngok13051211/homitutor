'use client';
import { useState, useRef } from 'react';
import { Container, Row, Col, Card, Button, Badge, Form } from 'react-bootstrap';
import Image from 'next/image';
import Link from 'next/link';
import { RequireRole } from '@/components/ui';
import { useCurrentUser, useUserWithRole } from '@/hooks/useCurrentUser';
import { BsChevronLeft, BsChevronRight } from 'react-icons/bs';
import styles from './TutorDetail.module.css';

export default function TutorDetailPage({ params }: { params: { id: string } }) {
    const [showMore, setShowMore] = useState(false);
    const [showMoreLesson, setShowMoreLesson] = useState(false);
    const [currentSlide, setCurrentSlide] = useState(0);
    const sliderRef = useRef<HTMLDivElement>(null);

    // Trong m√¥i tr∆∞·ªùng th·ª±c t·∫ø, s·ª≠ d·ª•ng useCurrentUser() thay v√¨ useUserWithRole()
    // const user = useCurrentUser();
    const user = useUserWithRole('student'); // Thay ƒë·ªïi gi√° tr·ªã ƒë·ªÉ test c√°c vai tr√≤ kh√°c nhau

    // Mock data - trong ·ª©ng d·ª•ng th·ª±c t·∫ø s·∫Ω l·∫•y t·ª´ API
    const tutor = {
        id: params.id,
        name: 'Emily',
        role: 'tutor',
        avatar: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=200&h=200&fit=crop',
        title: 'Gi√°o vi√™n Ti·∫øng Anh IELTS & TOEIC',
        rating: 5,
        totalReviews: 128,
        totalStudents: 75,
        hourlyRate: 350000,
        responseTime: '1h',
        location: 'Tr·ª±c tuy·∫øn',
        tags: ['IELTS', 'TOEIC', 'Ti·∫øng Anh giao ti·∫øp', 'Ng·ªØ ph√°p', 'Ph√°t √¢m'],
        about: `Xin ch√†o!

T√¥i l√† Emily, gi√°o vi√™n ti·∫øng Anh v·ªõi h∆°n 7 nƒÉm kinh nghi·ªám gi·∫£ng d·∫°y cho sinh vi√™n v√† ng∆∞·ªùi ƒëi l√†m. T√¥i t·ªët nghi·ªáp ƒê·∫°i h·ªçc Cambridge v·ªõi b·∫±ng C·ª≠ nh√¢n ng√†nh Ng√¥n ng·ªØ Anh v√† c√≥ ch·ª©ng ch·ªâ CELTA (Certificate in Teaching English to Speakers of Other Languages).

B√™n c·∫°nh vi·ªác gi·∫£ng d·∫°y, t√¥i t·ª´ng l√†m bi√™n d·ªãch v√† phi√™n d·ªãch cho nhi·ªÅu c√¥ng ty ƒëa qu·ªëc gia, gi√∫p t√¥i hi·ªÉu r√µ nh·ªØng kh√≥ khƒÉn th·ª±c t·∫ø khi s·ª≠ d·ª•ng ti·∫øng Anh trong m√¥i tr∆∞·ªùng c√¥ng vi·ªác.

T√¥i ƒë·∫∑c bi·ªát gi·ªèi trong vi·ªác gi·∫£ng d·∫°y IELTS v√† TOEIC, v·ªõi ph∆∞∆°ng ph√°p ƒë√£ gi√∫p h·ªçc vi√™n c·ªßa t√¥i ƒë·∫°t ƒëi·ªÉm s·ªë cao (IELTS 7.0+ v√† TOEIC 850+). T√¥i c≈©ng c√≥ kinh nghi·ªám gi·∫£ng d·∫°y ti·∫øng Anh giao ti·∫øp, gi√∫p h·ªçc vi√™n t·ª± tin trong c√°c t√¨nh hu·ªëng h√†ng ng√†y v√† c√¥ng vi·ªác.

T√¥i tin r·∫±ng vi·ªác h·ªçc ng√¥n ng·ªØ n√™n l√† m·ªôt tr·∫£i nghi·ªám th√∫ v·ªã v√† th·ª±c t·∫ø. Ph∆∞∆°ng ph√°p gi·∫£ng d·∫°y c·ªßa t√¥i t·∫≠p trung v√†o vi·ªác √°p d·ª•ng ng√¥n ng·ªØ v√†o c√°c t√¨nh hu·ªëng th·ª±c t·∫ø, gi√∫p h·ªçc vi√™n kh√¥ng ch·ªâ n·∫Øm v·ªØng ng·ªØ ph√°p m√† c√≤n bi·∫øt c√°ch s·ª≠ d·ª•ng ng√¥n ng·ªØ m·ªôt c√°ch t·ª± nhi√™n v√† hi·ªáu qu·∫£.`,
        aboutLesson: `C√°c bu·ªïi h·ªçc c·ªßa t√¥i ƒë∆∞·ª£c thi·∫øt k·∫ø ph√π h·ª£p v·ªõi m·ª•c ti√™u v√† tr√¨nh ƒë·ªô c·ªßa t·ª´ng h·ªçc vi√™n, d√π b·∫°n ƒëang chu·∫©n b·ªã cho k·ª≥ thi IELTS/TOEIC hay ch·ªâ mu·ªën c·∫£i thi·ªán k·ªπ nƒÉng giao ti·∫øp.

Ph∆∞∆°ng ph√°p gi·∫£ng d·∫°y c·ªßa t√¥i:
- Ph√¢n t√≠ch k·ªπ ƒëi·ªÉm m·∫°nh v√† ƒëi·ªÉm y·∫øu c·ªßa h·ªçc vi√™n ƒë·ªÉ x√¢y d·ª±ng l·ªô tr√¨nh h·ªçc t·∫≠p hi·ªáu qu·∫£
- S·ª≠ d·ª•ng t√†i li·ªáu ƒëa d·∫°ng v√† c·∫≠p nh·∫≠t, bao g·ªìm b√°o ch√≠, podcast, video v√† c√°c t√†i li·ªáu h·ªçc thu·∫≠t
- T·∫°o m√¥i tr∆∞·ªùng h·ªçc t·∫≠p tho·∫£i m√°i nh∆∞ng th·ª≠ th√°ch, khuy·∫øn kh√≠ch h·ªçc vi√™n s·ª≠ d·ª•ng ti·∫øng Anh t·ªëi ƒëa
- Cung c·∫•p ph·∫£n h·ªìi chi ti·∫øt v√† b√†i t·∫≠p ph√π h·ª£p ƒë·ªÉ h·ªçc vi√™n c√≥ th·ªÉ ti·∫øp t·ª•c h·ªçc t·∫≠p gi·ªØa c√°c bu·ªïi h·ªçc

V·ªÅ c·∫•u tr√∫c bu·ªïi h·ªçc:
M·ªói bu·ªïi h·ªçc k√©o d√†i 90 ph√∫t v√† th∆∞·ªùng bao g·ªìm:
1. √în t·∫≠p v√† ki·ªÉm tra ki·∫øn th·ª©c ƒë√£ h·ªçc (15 ph√∫t)
2. Gi·ªõi thi·ªáu v√† th·ª±c h√†nh ki·∫øn th·ª©c m·ªõi (45 ph√∫t)
3. Ho·∫°t ƒë·ªông √°p d·ª•ng th·ª±c t·∫ø (20 ph√∫t)
4. T·ªïng k·∫øt v√† giao b√†i t·∫≠p v·ªÅ nh√† (10 ph√∫t)`,
        ambassador: true,
        headline: "N√¢ng cao k·ªπ nƒÉng ti·∫øng Anh v·ªõi ph∆∞∆°ng ph√°p hi·ªáu qu·∫£ v√† th·ª±c t·∫ø. Chuy√™n luy·ªán thi IELTS, TOEIC v√† ti·∫øng Anh giao ti·∫øp cho c√¥ng vi·ªác v√† cu·ªôc s·ªëng!",
        features: {
            hourlyRate: "350.000ƒë",
            responseTime: "1h",
            numberOfStudents: "75+"
        }
    };

    // Mock data cho c√°c gia s∆∞ kh√°c
    const otherTutors = [
        {
            id: '101',
            name: 'Michael',
            avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=200&h=200&fit=crop',
            location: 'H√† N·ªôi & Tr·ª±c tuy·∫øn',
            isNew: true,
            hourlyRate: 300000,
            firstLessonFree: true
        },
        {
            id: '102',
            name: 'Sophie',
            avatar: 'https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=200&h=200&fit=crop',
            location: 'TP.HCM',
            isNew: true,
            hourlyRate: 320000,
            firstLessonFree: true
        },
        {
            id: '103',
            name: 'David',
            avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=200&fit=crop',
            location: 'TP.HCM & Tr·ª±c tuy·∫øn',
            isNew: false,
            hourlyRate: 280000,
            firstLessonFree: true
        },
        {
            id: '104',
            name: 'Linda',
            avatar: 'https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?w=200&h=200&fit=crop',
            location: 'H√† N·ªôi & Tr·ª±c tuy·∫øn',
            isNew: true,
            hourlyRate: 350000,
            firstLessonFree: true
        },
        {
            id: '105',
            name: 'Robert',
            avatar: 'https://images.unsplash.com/photo-1540569014015-19a7be504e3a?w=200&h=200&fit=crop',
            location: 'ƒê√† N·∫µng',
            isNew: false,
            hourlyRate: 290000,
            firstLessonFree: true
        }
    ];

    const handlePrevious = () => {
        if (currentSlide > 0) {
            setCurrentSlide(currentSlide - 1);
            if (sliderRef.current) {
                const cardWidth = sliderRef.current.querySelector('div')?.offsetWidth || 0;
                sliderRef.current.scrollLeft -= cardWidth + 16; // 16 l√† kho·∫£ng c√°ch gi·ªØa c√°c card
            }
        }
    };

    const handleNext = () => {
        if (currentSlide < otherTutors.length - 4) {
            setCurrentSlide(currentSlide + 1);
            if (sliderRef.current) {
                const cardWidth = sliderRef.current.querySelector('div')?.offsetWidth || 0;
                sliderRef.current.scrollLeft += cardWidth + 16; // 16 l√† kho·∫£ng c√°ch gi·ªØa c√°c card
            }
        }
    };

    return (
        <Container fluid className={`py-5 ${styles.tutorDetailPage}`}>
            {/* Badges/Tags */}
            <Container>
                <div className={styles.tags}>
                    {tutor.tags.map((tag, index) => (
                        <span key={index} className={styles.tag}>{tag}</span>
                    ))}
                </div>
            </Container>

            {/* Main Headline */}
            <Container>
                <div className={styles.headline}>
                    <h1>{tutor.headline}</h1>
                </div>
            </Container>

            {/* Main content area */}
            <Container>
                <Row>
                    {/* Left content */}
                    <Col lg={8}>
                        {/* Lesson location */}
                        <section className={styles.section}>
                            <h2 className={styles.sectionTitle}>ƒê·ªãa ƒëi·ªÉm d·∫°y</h2>
                            <div className={styles.locationBadge}>
                                <span className={styles.badgeIcon}>üåê</span> {tutor.location}
                            </div>
                        </section>
                        
                        {/* Ambassador badge */}
                        {tutor.ambassador && (
                            <section className={styles.ambassadorSection}>
                                <div className={styles.ambassadorBadge}>
                                    <span className={styles.badgeIcon}>üåü</span> Gia s∆∞ n·ªïi b·∫≠t
                                </div>
                                <p className={styles.ambassadorText}>
                                    M·ªôt trong nh·ªØng gia s∆∞ t·ªët nh·∫•t c·ªßa ch√∫ng t√¥i. H·ªì s∆° ch·∫•t l∆∞·ª£ng, kinh nghi·ªám trong lƒ©nh v·ª±c, b·∫±ng c·∫•p ƒë∆∞·ª£c x√°c minh v√† th·ªùi gian ph·∫£n h·ªìi nhanh ch√≥ng. {tutor.name} s·∫Ω r·∫•t vui khi s·∫Øp x·∫øp bu·ªïi h·ªçc {tutor.tags[0]} ƒë·∫ßu ti√™n c·ªßa b·∫°n.
                                </p>
                            </section>
                        )}

                        {/* About tutor */}
                        <section className={styles.section}>
                            <h2 className={styles.sectionTitle}>V·ªÅ {tutor.name}</h2>
                            <div className={styles.aboutContent}>
                                <div className={showMore ? styles.fullText : styles.truncatedText}>
                                    {tutor.about.split('\n').map((paragraph, idx) => (
                                        <p key={idx}>{paragraph}</p>
                                    ))}
                                </div>
                                <Button 
                                    variant="link" 
                                    className={styles.seeMoreButton} 
                                    onClick={() => setShowMore(!showMore)}
                                >
                                    {showMore ? 'R√∫t g·ªçn' : 'Xem th√™m'} ‚ñº
                                </Button>
                            </div>
                        </section>

                        {/* About the lesson */}
                        <section className={styles.section}>
                            <h2 className={styles.sectionTitle}>V·ªÅ bu·ªïi h·ªçc</h2>
                            <div className={styles.lessonOptions}>
                                <span className={styles.levelBadge}>M·ªçi c·∫•p ƒë·ªô</span>
                                <span className={styles.languageBadge}>Ti·∫øng Vi·ªát & Ti·∫øng Anh</span>
                            </div>
                            <div className={styles.aboutContent}>
                                <div className={showMoreLesson ? styles.fullText : styles.truncatedText}>
                                    {tutor.aboutLesson.split('\n').map((paragraph, idx) => (
                                        <p key={idx}>{paragraph}</p>
                                    ))}
                                </div>
                                <Button 
                                    variant="link" 
                                    className={styles.seeMoreButton} 
                                    onClick={() => setShowMoreLesson(!showMoreLesson)}
                                >
                                    {showMoreLesson ? 'R√∫t g·ªçn' : 'Xem th√™m'} ‚ñº
                                </Button>
                            </div>
                        </section>
                    </Col>

                    {/* Right sidebar */}
                    <Col lg={4}>
                        <div className={styles.sidebar}>
                            {/* Tutor profile card */}
                            <Card className={styles.profileCard}>
                                <div className={styles.profileHeader}>
                                    <div className={styles.avatarContainer}>
                                        <Image
                                            src={tutor.avatar}
                                            alt={tutor.name}
                                            width={120}
                                            height={120}
                                            className={styles.avatar}
                                        />
                                    </div>
                                    <div className={styles.tutorInfo}>
                                        <h2 className={styles.tutorName}>{tutor.name}</h2>
                                        <div className={styles.tutorRating}>
                                            <span className={styles.stars}>{'‚òÖ'.repeat(Math.round(tutor.rating))}</span>
                                            <span className={styles.reviewCount}>({tutor.totalReviews} ƒë√°nh gi√°)</span>
                                        </div>
                                    </div>
                                    <div className={styles.actions}>
                                        <Button variant="outline-secondary" className={styles.favoriteButton}>
                                            ‚ô°
                                        </Button>
                                        <Button variant="outline-secondary" className={styles.shareButton}>
                                            ‚Üó
                                        </Button>
                                    </div>
                                </div>
                                
                                <div className={styles.tutorFeatures}>
                                    <div className={styles.featureItem}>
                                        <div className={styles.featureLabel}>Gi√° m·ªói gi·ªù</div>
                                        <div className={styles.featureValue}>{tutor.hourlyRate.toLocaleString()}ƒë</div>
                                    </div>
                                    <div className={styles.featureItem}>
                                        <div className={styles.featureLabel}>Th·ªùi gian ph·∫£n h·ªìi</div>
                                        <div className={styles.featureValue}>{tutor.responseTime}</div>
                                    </div>
                                    <div className={styles.featureItem}>
                                        <div className={styles.featureLabel}>S·ªë h·ªçc vi√™n</div>
                                        <div className={styles.featureValue}>{tutor.totalStudents}+</div>
                                    </div>
                                </div>

                                <div className={styles.contactContainer}>
                                    <Button variant="primary" className={styles.contactButton}>
                                        <span className={styles.contactIcon}>üí¨</span> Li√™n h·ªá
                                    </Button>
                                </div>
                                
                                <div className={styles.firstLessonFree}>
                                    <span className={styles.freeLabel}>Bu·ªïi h·ªçc ƒë·∫ßu ti√™n mi·ªÖn ph√≠</span>
                                </div>
                            </Card>
                        </div>
                    </Col>
                </Row>
            </Container>

            {/* Other tutors section */}
            <Container className="mt-5">
                <div className={styles.otherTutorsHeader}>
                    <h2 className={styles.otherTutorsTitle}>Nh·ªØng gia s∆∞ ti·∫øng Anh kh√°c</h2>
                    <div className={styles.sliderControls}>
                        <span className={styles.slideCount}>{currentSlide + 1}/{Math.min(otherTutors.length, 5)}</span>
                        <Button 
                            variant="light"
                            className={styles.sliderButton}
                            onClick={handlePrevious}
                            disabled={currentSlide === 0}
                        >
                            <BsChevronLeft />
                        </Button>
                        <Button 
                            variant="light"
                            className={styles.sliderButton}
                            onClick={handleNext}
                            disabled={currentSlide >= otherTutors.length - 4}
                        >
                            <BsChevronRight />
                        </Button>
                    </div>
                </div>

                <div className={styles.tutorCarousel} ref={sliderRef}>
                    {otherTutors.map((otherTutor) => (
                        <div key={otherTutor.id} className={styles.tutorCard}>
                            <Link href={`/tutor/${otherTutor.id}`} className={styles.tutorCardLink}>
                                <div className={styles.tutorCardImage}>
                                    <Image 
                                        src={otherTutor.avatar}
                                        alt={otherTutor.name}
                                        width={200}
                                        height={200}
                                        className={styles.tutorCardAvatar}
                                    />
                                </div>
                                <div className={styles.tutorCardContent}>
                                    <h3 className={styles.tutorCardName}>{otherTutor.name}</h3>
                                    <p className={styles.tutorCardLocation}>{otherTutor.location}</p>
                                    
                                    <div className={styles.tutorCardFooter}>
                                        {otherTutor.isNew && (
                                            <span className={styles.newBadge}>M·ªõi</span>
                                        )}
                                        <div className={styles.tutorCardPrice}>
                                            <span className={styles.price}>{otherTutor.hourlyRate.toLocaleString()}ƒë/h</span>
                                            {otherTutor.firstLessonFree && (
                                                <span className={styles.firstFree}>Bu·ªïi ƒë·∫ßu mi·ªÖn ph√≠</span>
                                            )}
                                        </div>
                                    </div>
                                </div>
                            </Link>
                        </div>
                    ))}
                </div>
            </Container>
        </Container>
    );
}